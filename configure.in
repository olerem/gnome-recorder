AC_PREREQ(2.52)
AC_INIT(gmix)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-media, 1.100.0)
AM_MAINTAINER_MODE

AC_PROG_INTLTOOL

GNOME_COMMON_INIT
GNOME_PLATFORM_GNOME_2(yes, force)

GETTEXT_PACKAGE=gnome-media-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")

AC_PROG_CC
AC_ISC_POSIX

# Checks for programs.
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/ioctl.h unistd.h)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_ALLOCA
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MMAP
AC_CHECK_FUNCS(getcwd getwd putenv strdup strerror)
AM_PROG_LIBTOOL

# Start of pkg-config checks
PKG_CHECK_MODULES(MEDIA, glib-2.0 >= 1.3.7 gmodule-2.0 >= 1.3.7 \
		  gnome-vfs-2.0 >= 1.1 libbonobo-2.0 >= 1.100.0	\
		  libbonoboui-2.0 >= 1.97.0 \
		  libgnome-2.0 >= 1.102.0 libgnomeui-2.0 >= 1.102.0
		  bonobo-activation-2.0 >= 0.9.1 esound >= 0.2.23)
AC_SUBST(MEDIA_CFLAGS)
AC_SUBST(MEDIA_LIBS)

# Check for the CDDBSlave2 modules
PKG_CHECK_MODULES(CDDBSLAVE, glib-2.0 >= 1.3.7 gmodule-2.0 >= 1.3.7 \
		  gnome-vfs-2.0 >= 1.1 libbonobo-2.0 >= 1.100.0 \
		  libgnome-2.0 >= 1.102.0 bonobo-activation-2.0 >= 0.9.1)
AC_SUBST(CDDBSLAVE_CFLAGS)
AC_SUBST(CDDBSLAVE_LIBS)

AC_PATH_PROG(GCONFTOOL, gconftool-2)

BONOBO_IDLDIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(BONOBO_IDLDIR)
BONOBO_ACT_IDLDIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACT_IDLDIR)

ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

# Check for esound library
AM_PATH_ESD(0.2.7, we_have_esd=true)
if test -n "$we_have_esd"; then
AC_DEFINE(HAVE_ESD)
fi

# Check for ScrollKeeper
AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR([Couldn't find scrollkeeper-config, please install the scrollkeeper package])
fi

# Test whether jw is installed
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)

# ALSA
AC_ARG_ENABLE(alsa, 
[  --enable-alsa=[no/yes]      Enable support for ALSA sound library],,enable_alsa=no)
AC_CHECK_HEADERS(sys/asoundlib.h)
if test "x$enable_alsa" = "xyes"; then
    if test "${ac_cv_header_sys_asoundlib_h}" == "yes"; then
	AC_DEFINE(ALSA)
    else
	enable_alsa="no";
    fi
fi

ALL_LINGUAS="az ca cs da de el en_GB es et fi fr ga gl hu it ja ko lt nl nn no pl pt pt_BR ro ru sk sl sv tr uk zh_TW zh_CN.GB2312"
AM_GLIB_GNU_GETTEXT

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

# vu-meter
PROGRAMS_VUMETER=""
if test -n "$we_have_esd"; then
PROGRAMS_VUMETER="vu-meter"
fi
AC_SUBST(PROGRAMS_VUMETER)

# gmix
PROGRAMS_GMIX=""
GMIX_LIBS=""
AC_CHECK_HEADERS(soundcard.h linux/soundcard.h sys/soundcard.h)
AC_CHECK_HEADERS(machine/soundcard.h)
if test "x$enable_alsa" = "xyes"; then
    PROGRAMS_GMIX=gmix
    GMIX_LIBS="-lasound"
elif test "${ac_cv_header_sys_soundcard_h}" = "yes" || \
     test "${ac_cv_header_soundcard_h}" = "yes" || \
     test "${ac_cv_header_linux_soundcard_h}" = "yes" || \
     test "${ac_cv_header_machine_soundcard_h}" = "yes"; then
    PROGRAMS_GMIX=gmix
fi
AC_SUBST(PROGRAMS_GMIX)
AC_SUBST(GMIX_LIBS)


# find the mailer for use with the submission helper
# This code is from the gnome-bug script.  It should work for most systems
AC_MSG_CHECKING(for the MTA)
if test -f /usr/sbin/sendmail; then
  MAIL_TRANSFER_AGENT="/usr/sbin/sendmail -t"
elif test -f /usr/lib/sendmail; then
  MAIL_TRANSFER_AGENT="/usr/lib/sendmail -t"
else
  MAIL_TRANSFER_AGENT="rmail "
fi
AC_DEFINE_UNQUOTED(MAIL_TRANSFER_AGENT, "$MAIL_TRANSFER_AGENT")
AC_MSG_RESULT($MAIL_TRANSFER_AGENT)

# Everything OK for gnome-cd?
PROGRAMS_GNOME_CD=""
AC_CHECK_HEADERS(linux/cdrom.h,[PROGRAMS_GNOME_CD=gnome-cd])
AC_CHECK_HEADERS(linux/ucdrom.h)
AC_CHECK_HEADERS(sys/cdio.h,[PROGRAMS_GNOME_CD=gnome-cd])
AC_CHECK_HEADERS(sun/dkio.h,[PROGRAMS_GNOME_CD=gnome-cd])

AC_MSG_CHECKING([whether to use cd changer support (Linux 2.1.x headers required)])
AC_EGREP_CPP(answer_affirmatively,
[#include <linux/cdrom.h>
 #ifdef CDROM_CHANGER_NSLOTS
	answer_affirmatively
 #endif
], cd_changer=yes, cd_changer=no)
if test "$cd_changer" = "yes"; then
	USE_CD_CHANGER="-DTCD_CHANGER_ENABLED"
fi
AC_MSG_RESULT("$cd_changer")

AC_SUBST(USE_CD_CHANGER)
AC_SUBST(PROGRAMS_GNOME_CD)

# grecord
PROGRAMS_GRECORD="grecord"
AC_SUBST(PROGRAMS_GRECORD)

AC_OUTPUT([
gnome-media.spec
Makefile
po/Makefile.in
gmix/Makefile
gmix/doc/Makefile
gmix/doc/C/Makefile
gmix/doc/it/Makefile
vu-meter/Makefile
cddb-slave2/Makefile
gnome-cd/Makefile
gnome-cd/images/Makefile
gnome-cd/images/lcd-theme/Makefile
grecord/Makefile
grecord/src/Makefile
omf-install/Makefile
version.h])
